spring:
  application:
    name: orders

  datasource:
    url: jdbc:mysql://localhost:3306/orders_db?createDatabaseIfNotExist=true
    username: root
    password: root
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect

  profiles:
    active: "prod"

  config:
    import: "optional:configserver:http://localhost:8071/"

  cloud:
    openfeign:
      circuitbreaker:
        enabled: true

  kafka:
    bootstrap-servers: localhost:9092
    template:
      default-topic: orders
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

springdoc:
  api-docs:
    path: /v3/api-docs
  swagger-ui:
    path: /swagger-ui.html
  packages-to-scan:
    - com.oralie.orders


management:
  endpoints:
    web:
      exposure:
        include: "*"
  health:
    readiness-state:
      enabled: true
    liveness-state:
      enabled: true
  endpoint:
    health:
      probes:
        enabled: true
    shutdown:
      enabled: true
  info:
    env:
      enabled: true
  metrics:
    tags:
      application: ${spring.application.name}

endpoints:
  shutdown:
    enabled: true

eureka:
  instance:
    prefer-ip-address: true
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://localhost:8070/eureka/

info:
  app:
    name: "orders"
    description: "orders application"
    version: "1.0.0"

logging:
  level:
    com:
      oralie:
        orders: DEBUG
    org:
      springframework:
        security: DEBUG
        web: DEBUG
  pattern:
    level: "%5p [${spring.application.name},%X{trace_id},%X{span_id}]"

resilience4j.circuitbreaker:
  configs:
    default:
      slidingWindowSize: 10
      permittedNumberOfCallsInHalfOpenState: 2
      waitDurationInOpenState: 5000
      failureRateThreshold: 50

resilience4j.retry:
  configs:
    default:
      maxAttempts: 3
      waitDuration: 500
      enableExponentialBackoff: true
      exponentialBackoffMultiplier: 2
      ignoreExceptions:
        - java.lang.NullPointerException
      retryExceptions:
        - java.util.concurrent.TimeoutException

resilience4j.ratelimiter:
  configs:
    default:
      timeoutDuration: 1000
      limitRefreshPeriod: 5000
      limitForPeriod: 1

paypal:
  client-id: AWgfD0pzzu5uEWJiCrg6HDeY2JnLgXxoTxsnHVkmXCK-TJ-T7lQixe1vcZU5WPjTsCLUkcOi-piRWGKT
  client-secret: EMbibNim6DQs6l4k4aGm9_SgDvUH1ezYP6sBuqp3aNF2ccYZdo1apZ0v2ajL95Sc0g2gfUy2IpcAgpy7
  mode: sandbox



server:
  port: 8083
